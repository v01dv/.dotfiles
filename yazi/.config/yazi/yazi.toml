# Default yazi config: https://github.com/sxyazi/yazi/blob/main/yazi-config/preset/yazi-default.toml
# Also use this config as reference:
#   https://github.com/maotseantonio/home/blob/main/.config/yazi/yazi.toml
#
# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
# If you encounter any issues, please make an issue at https://github.com/yazi-rs/schemas.
"$schema" = "https://yazi-rs.github.io/schemas/yazi.json"

[manager]
ratio          = [ 1, 4, 3 ]
sort_by        = "alphabetical"
sort_sensitive = false
sort_reverse 	 = false
sort_dir_first = true
sort_translit  = false
linemode       = "size_and_mtime"
show_hidden    = true
show_symlink   = false
scrolloff      = 5
mouse_events   = [ "click", "scroll" ]
title_format   = "Yazi: {cwd}"

[preview]
wrap            = "no"
tab_size        = 2
max_width       = 600
max_height      = 900
cache_dir       = "~/.cache/yazi"
image_delay     = 0
image_filter    = "triangle"
image_quality   = 75
sixel_fraction  = 15
ueberzug_scale  = 1
ueberzug_offset = [ 0, 0, 0, 0 ]

[opener]
edit = [
  { run = '${EDITOR:-nvim} "$@"', desc = "$EDITOR", block = true, for = "linux" },
  { run = 'codium %@', orphan = true, desc = "vscodium", for = "linux" },
]

open = [
	{ run = 'xdg-open "$1"', orphan = true, desc = "Open", for = "linux" },
	{ run = 'start "" "%1"', orphan = true, desc = "Open", for = "windows" },
  { run = 'termux-open "$1"',             desc = "Open", for = "android" },
]

reveal = [
	{ run = 'xdg-open "$(dirname "$1")"',           desc = "Reveal", for = "linux" },
	{ run = 'explorer /select,"%1"', orphan = true, desc = "Reveal", for = "windows" },
  { run = 'termux-open "$(dirname "$1")"',        desc = "Reveal", for = "android" },
	{ run = '''exiftool "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show EXIF", for = "unix" },
]

# extract = [
# 	{ run = 'ya pub extract --list "$@"', desc = "Extract here", for = "unix" },
# 	{ run = 'ya pub extract --list %*',   desc = "Extract here", for = "windows" },
# ]

extract = [
  { run = 'ouch d -y "$@"', desc = "Extract here with ouch", for = "unix" },
	{ run = 'ouch d -y "%*"', desc = "Extract here with ouch", for = "windows" },
]

folder = [
  { run = '''zsh -c "nvim "$1""''', block = true, desc = "neovim", for = "linux" },
  { run = 'ghostty -e nvim "$@"', orphan = true, desc = "neovim (detached)", for = "linux" },
  { run = 'codium  "$@"', orphan = true, desc = "vscodium", for = "linux" },
  { run = 'xdg-open "$@"', orphan = true, desc = "xdg-open", for = "linux" },
]

document = [
  # { run = 'xdg-open "$@"', orphan = true, desc = "xdg-open", for = "linux" },
  { run = 'setsid -f zathura "$@"', desc = "zathura", for = "linux" },
  { run = 'libreoffice "$@"', orphan = true, desc = "libreoffice", for = "linux" },
]

image = [
  { run = 'setsid -f nsxiv "$1"', desc = "nsxiv", for = "linux" },
  # https://github.com/sxyazi/yazi/discussions/2220
  # { run = 'nsxiv "$1"', desc = "nsxiv", for = "linux" , setsid = true},
  { run = 'qimgv "$@"', orphan = true, desc = "qimgv", for = "linux" },
  { run = 'krita "$@"', orphan = true, desc = "krita", for = "linux" },
  { run = 'satty --filename "$@"', orphan = true, desc = "satty", for = "linux" },
]

play = [
  { run = 'setsid -f mpv --force-window "$@"', orphan = true, for = "unix" },
	{ run = 'setsid - fmpv --force-window %*', orphan = true, for = "windows" },
	{ run = '''mediainfo "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show media info", for = "unix" },
]

# MIME types:
#   https://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types
[open]
rules = [
	# Folder
	{ name = "*/", use = [ "edit", "open", "reveal" ] },
	# Text
	{ mime = "text/*", use = [ "edit", "reveal" ] },
  { mime = "image/djvu", use = "document" },
	# Image
	{ mime = "image/*", use = [ "image", "reveal" ] },
	# Media
	{ mime = "{audio,video}/*", use = [ "play", "reveal" ] },
	# Archive
  # Only Decompress and Unarchive. Do not open
  { mime = "application/{zip,rar,7z*,tar,gzip,xz,zstd,bzip*,lzma,compress,archive,cpio,arj,xar,ms-cab*}", use = [ "ouch", "reveal" ] },
	# JSON
	{ mime = "application/{json,ndjson,subrip,pgp-encrypted}", use = [ "edit", "reveal" ] },
	{ mime = "*/javascript", use = [ "edit", "reveal" ] },
	# Empty file
	{ mime = "inode/empty", use = [ "edit", "reveal" ] },

  { mime = "application/{pdf,postscript,octet-stream}", use = "document" },
  { mime = "application/epub*", use = "document" },
  { mime = "application/mobipocket-ebook", use = "document" },

	# Fallback
  # Find here https://github.com/sxyazi/yazi/discussions/1920
	{ name = "*", use = [ "edit", "reveal" ] },
]

[tasks]
micro_workers    = 10
macro_workers    = 25
bizarre_retry    = 5
image_alloc      = 536870912  # 512MB
image_bound      = [ 0, 0 ]
suppress_preload = false

[plugin]

prepend_fetchers = [
	# Mimetype
  # { id = "mime-ext", name = "*", run = "mime-ext", prio = "high" },
  { id = "mime", if = "!(mime|dummy)", name = "*", run = "mime-ext", prio = "high" },
	# { id = "mime", name = "*", run = "mime", if = "!mime", prio = "high" },
]
preloaders = [
	# Image
	{ mime = "image/{avif,hei?,jxl,svg+xml}", run = "magick" },
	{ mime = "image/*", run = "image" },
	# Video
	{ mime = "video/*", run = "video" },
	# PDF
	{ mime = "application/pdf", run = "pdf" },
	# Font
	{ mime = "font/*", run = "font" },
	{ mime = "application/vnd.ms-opentype", run = "font" },
]

prepend_previewers = [
	# Archive previewer
	{ mime = "application/*zip",            run = "ouch" },
	{ mime = "application/x-tar",           run = "ouch" },
	{ mime = "application/x-bzip2",         run = "ouch" },
	{ mime = "application/x-7z-compressed", run = "ouch" },
	{ mime = "application/x-rar",           run = "ouch" },
	{ mime = "application/x-xz",            run = "ouch" },
]

# This is default settings
# previewers = [
# 	{ name = "*/", run = "folder", sync = true },
# 	# Code
# 	{ mime = "text/*", run = "code" },
# 	{ mime = "application/{mbox,javascript,wine-extension-ini}", run = "code" },
# 	# JSON
# 	{ mime = "application/{json,ndjson}", run = "json" },
# 	# Image
# 	{ mime = "image/{avif,hei?,jxl,svg+xml}", run = "magick" },
# 	{ mime = "image/*", run = "image" },
# 	# Video
# 	{ mime = "video/*", run = "video" },
# 	# PDF
# 	{ mime = "application/pdf", run = "pdf" },
# 	# Archive
# 	{ mime = "application/{zip,rar,7z*,tar,gzip,xz,zstd,bzip*,lzma,compress,archive,cpio,arj,xar,ms-cab*}", run = "archive" },
# 	{ mime = "application/{debian*-package,redhat-package-manager,rpm,android.package-archive}", run = "archive" },
# 	{ name = "*.{AppImage,appimage}", run = "archive" },
# 	# Virtual Disk / Disk Image
# 	{ mime = "application/{iso9660-image,qemu-disk,ms-wim,apple-diskimage}", run = "archive" },
# 	{ mime = "application/virtualbox-{vhd,vhdx}", run = "archive" },
# 	{ name = "*.{img,fat,ext,ext2,ext3,ext4,squashfs,ntfs,hfs,hfsx}", run = "archive" },
# 	# Font
# 	{ mime = "font/*", run = "font" },
# 	{ mime = "application/ms-opentype", run = "font" },
# 	# Empty file
# 	{ mime = "inode/empty", run = "empty" },
# 	# Fallback
# 	{ name = "*", run = "file" },
# ]


[input]
cursor_blink = false

# cd
cd_title  = "Change directory:"
cd_origin = "top-center"
cd_offset = [ 0, 2, 50, 3 ]

# create
create_title  = ["Create:", "Create (dir):"]
create_origin = "bottom-left"
create_offset = [ 0, 2, 50, 3 ]

# rename
rename_title  = "Rename:"
rename_origin = "hovered"
rename_offset = [ 0, 1, 50, 3 ]

# filter
filter_title  = "Filter:"
filter_origin = "top-center"
filter_offset = [ 0, 2, 50, 3 ]

# find
find_title  = [ "Find next:", "Find previous:" ]
find_origin = "top-center"
find_offset = [ 0, 2, 50, 3 ]

# search
search_title  = "Search via {n}:"
search_origin = "top-center"
search_offset = [ 0, 2, 50, 3 ]

# shell
shell_title  = [ "Shell:", "Shell (block):" ]
shell_origin = "top-center"
shell_offset = [ 0, 2, 50, 3 ]

[confirm]
# trash
trash_title 	= "Trash {n} selected file{s}?"
trash_origin	= "center"
trash_offset	= [ 0, 0, 70, 20 ]

# delete
delete_title 	= "Permanently delete {n} selected file{s}?"
delete_origin	= "center"
delete_offset	= [ 0, 0, 70, 20 ]

# overwrite
overwrite_title   = "Overwrite file?"
overwrite_content = "Will overwrite the following file:"
overwrite_origin  = "center"
overwrite_offset  = [ 0, 0, 50, 15 ]

# quit
quit_title   = "Quit?"
quit_content = "The following task is still running, are you sure you want to quit?"
quit_origin  = "center"
quit_offset  = [ 0, 0, 50, 15 ]

[select]
open_title  = "Open with:"
open_origin = "hovered"
open_offset = [ 0, 1, 50, 7 ]

[which]
sort_by      	 = "none"
sort_sensitive = false
sort_reverse 	 = false
sort_translit  = false

[log]
enabled = false
