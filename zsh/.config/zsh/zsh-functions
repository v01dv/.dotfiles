# Source:
#   - https://github.com/ChristianChiarulli/machfiles/blob/new/zsh/.config/zsh/zsh-functions
#   - https://www.youtube.com/watch?v=bTLYiNvRIVI

# Function to source files if they exist
function zsh_add_file() {
    [ -f "$ZDOTDIR/$1" ] && source "$ZDOTDIR/$1"
}

function zsh_add_plugin() {
    PLUGIN_NAME=$(echo $1 | cut -d "/" -f 2)
    if [ -d "$ZDOTDIR/plugins/$PLUGIN_NAME" ]; then
        # For plugins
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.plugin.zsh" || \
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.zsh"
    else
        git clone "https://github.com/$1.git" "$ZDOTDIR/plugins/$PLUGIN_NAME"
    fi
}

# TODO: Need to to think is it good allign with my current complition initialization
function zsh_add_completion() {
    PLUGIN_NAME=$(echo $1 | cut -d "/" -f 2)
    if [ -d "$ZDOTDIR/plugins/$PLUGIN_NAME" ]; then
        # For completions
		completion_file_path=$(ls $ZDOTDIR/plugins/$PLUGIN_NAME/_*)
		fpath+="$(dirname "${completion_file_path}")"
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.plugin.zsh"
    else
        git clone "https://github.com/$1.git" "$ZDOTDIR/plugins/$PLUGIN_NAME"
		fpath+=$(ls $ZDOTDIR/plugins/$PLUGIN_NAME/_*)
		    # rm $ZDOTDIR/.zccompdump
        [ -f $ZDOTDIR/.zccompdump ] && $ZDOTDIR/.zccompdump
    fi
	completion_file="$(basename "${completion_file_path}")"
	if [ "$2" = true ] && compinit "${completion_file:1}"
}


# Source: https://arkadiuszchmura.com/posts/accessing-cheatsheets-from-the-command-line/
function c() {
  # Install command line client for cht.sh as described:
  #   https://github.com/chubin/cheat.sh?tab=readme-ov-file#installation
  # The "$@" part refers to arguments passed to the function)
  # FIX: Update to the proper path
  $HOME/.local/bin/extra/cht.sh "$@" | less
}

# Shell wrapper that provides the ability to change the current working directory
# when exiting Yazi.
function y() {
  # When I'm in a Yazi subshell and press y, it exits the subshell and returns
  # to the original Yazi instance instead of opening a new one. This ensures
  # there's always just one instance of Yazi running:
  # https://github.com/sxyazi/yazi/issues/2161
  if [ -n "$YAZI_LEVEL" ]; then
    exit
  fi
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}
