# #!/bin/sh
#
# # A dmenu wrapper script for system functions.
#
# # For non-systemd init systems.
# case "$(readlink -f /sbin/init)" in
# 	*runit*) hib="sudo -A zzz" ;;
# 	*openrc*) reb="sudo -A openrc-shutdown -r"; shut="sudo -A openrc-shutdown -p" ;;
# esac
#
# cmds="\
# ï€£ lock		slock
# ï‚‹ leave dwm	kill -TERM $(pgrep -u $USER "\bdwm$")
# ï€ž renew dwm	kill -HUP $(pgrep -u $USER "\bdwm$")
# ï†† hibernate	${hib:-sudo -A systemctl suspend-then-hibernate}
# ï€¡ reboot	${reb:-sudo -A reboot}
# ï€‘ shutdown	${shut:-sudo -A shutdown -h now}
# ðŸ“º display off 	 xset dpms force off"
#
# choice="$(echo "$cmds" | cut -d'	' -f 1 | dmenu)" || exit 1
#
# `echo "$cmds" | grep "^$choice	" | cut -d '	' -f2-`
#
#!/bin/sh

# A dmenu wrapper script for system functions.
export WM="dwm"
case "$(readlink -f /sbin/init)" in
	*systemd*) ctl='systemctl' ;;
	*) ctl='loginctl' ;;
esac

wmpid(){ # This function is needed if there are multiple instances of the window manager.
	tree="$(pstree -ps $$)"
	tree="${tree#*$WM(}"
	echo "${tree%%)*}"
}

case "$(printf "ï€£ lock\nï¡‚ leave $WM\nï€ž renew $WM\nï‹œ hibernate\nï€¡ reboot\nï€‘ shutdown\nï†† sleep\nï¡¸ display off" | dmenu -i -p 'Action: ')" in
	'ï€£ lock') slock ;;
	"ï¡‚ leave $WM") kill -TERM "$(wmpid)" ;;
	"ï€ž renew $WM") kill -HUP "$(wmpid)" ;;
	'ï‹œ hibernate') slock $ctl hibernate -i ;;
	'ï†† sleep') slock $ctl suspend -i ;;
	'ï€¡ reboot') $ctl reboot -i ;;
	'ï€‘ shutdown') $ctl poweroff -i ;;
	'ï¡¸ display off') xset dpms force off ;;
	*) exit 1 ;;
esac
